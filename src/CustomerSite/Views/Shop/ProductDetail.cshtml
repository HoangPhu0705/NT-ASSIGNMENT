@model ProductDetailModel
@{
    ViewData["Title"] = "Product Detail";
}

@* Top bar *@
<div class="flex bg-[#F8F8F8] h-12 justify-between px-12">
    <div class="w-full flex flex-col justify-center items-center">
        <div class="flex justify-center items-center gap-2">
            <p class="text-center font-bold">Create Your Combo | 20% Off Two, 30% Off Three | Exclusions apply</p>
        </div>
    </div>
</div>
@if (Model.Product != null && Model.Review != null)
{
    <div class="px-56 pt-20">
        <div class="flex w-full">
            <!-- Existing Images Section -->
            <div class="basis-2/3 flex flex-col">
                <div class="flex justify-between">
                    <h1 class="text-5xl">@Model.Product.Name</h1>
                    <div class="flex justify-between items-center mt-4">
                        <span class="badge p-4">Best Seller</span>
                    </div>
                </div>
                <div class="rating rating-sm mt-2 flex items-center">
                    <div id="starContainer" class="flex space-x-1 text-base">
                        <!-- Stars will be dynamically generated -->
                    </div>
                    <span class="underline ml-2">@Model.Review.ReviewCount</span>
                </div>

                @* Images Grid *@
                <div class="grid grid-cols-2 grid-rows-2 gap-4 mt-4 ">
                    @* Top Row *@
                    @foreach (var image in Model.Product.Images)
                    {
                        <div class="relative bg-[#F2F2F2] p-6 rounded-xl">
                            <img src="@image.ImageUrl" alt="MX Master 3S" class="object-contain w-full h-full rounded-xl ">
                        </div>
                    }
                </div>
            </div>

            <div class="basis-1/3 flex flex-col ml-8">
                <div class="flex justify-end">
                    <h1 class="text-3xl self-end">$<span id="variant-price"></span></h1>
                </div>
                <div class="divider"></div>

                <div class="flex flex-col items-start gap-5">
                    <p class="text-2xl">Type:</p>
                    <select id="variant-select" class="select select-bordered border-2 border-black w-full max-w-md text-xl rounded-full">
                        <option disabled selected>Select a type</option>
                        @foreach (var variant in Model.Product.Variants)
                        {
                            <option value="@variant.Id" data-price="@variant.Price" data-stock="@variant.Stock" data-attributes="@System.Text.Json.JsonSerializer.Serialize(variant.Attributes)">@variant.Name</option>
                        }
                    </select>
                </div>
                <div class="divider"></div>
                <p class="text-center text-sm text-[#337A21]">
                    <span id="variant-stock" class="underline"></span> left In stock. Ready to ship
                </p>

                <!-- Existing Add to Cart and Wishlist buttons -->
                <div class="flex mt-5">
                    <div class="btn grow rounded-full bg-black text-white hover:bg-[#2F3132]">ADD TO CART</div>
                    <div class="tooltip" data-tip="Add to Wishlist">
                        <button class="btn bg-transparent shadow-none border-none hover:bg-transparent">
                            <i class="hgi hgi-stroke hgi-favourite text-2xl font-bold"></i>
                        </button>
                    </div>
                </div>

                <!-- Existing Shipping and Offer sections -->
                <div class="flex items-center gap-3 mt-5 p-4 bg-gray-200 rounded-lg">
                    <i class="hgi hgi-stroke hgi-truck text-2xl"></i>
                    <div class="flex flex-col">
                        <p class="text-sm">Get it under a week with free standard shipping on orders $29 above.</p>
                    </div>
                </div>
                <div class="flex items-center gap-3 mt-5 p-4 bg-gray-200 rounded-lg">
                    <i class="hgi hgi-stroke hgi-tag-01 text-2xl"></i>
                    <div class="flex flex-col">
                        <p class="text-sm">FREE* MX Travel Case ($19.99 value) with MX Master 3S or MX Anywhere 3S.</p>
                    </div>
                </div>

                <div class="divider"></div>

                <div class="flex flex-col mt-5 gap-5">
                    <h1 class="text-2xl">Description</h1>
                    <p>@Model.Product.Description</p>
                </div>

                <div class="divider"></div>

                <div class="flex flex-col mt-5 gap-5">
                    <h1 class="text-2xl">Specs</h1>
                    <div class="border border-gray-300 rounded-lg p-4 bg-white">
                        <ul id="variant-specs" class="list-none space-y-2"></ul>
                    </div>
                </div>
            </div>
        </div>
    </div>

    
}

@* Review Section *@
<div class="px-56 pt-20">
    <h1 class="text-3xl font-bold">Reviews</h1>
    <div class="flex mt-5">
        @* Rating Snapshot Section *@
        <div class="flex-1/2">
            <h2 class="text-xl font-semibold">Rating Snapshot</h2>
            <div class="mt-4">
                <div class="flex items-center gap-3 mb-2">
                    <span class="w-16 text-sm">5 stars</span>
                    <progress class="progress w-56" value="@Model.Review.RatingCounts["5star"]" max="@Model.Review.ReviewCount"></progress>
                    <span class="text-sm">@Model.Review.RatingCounts["5star"]</span>
                </div>
                <div class="flex items-center gap-3 mb-2">
                    <span class="w-16 text-sm">4 stars</span>
                    <progress class="progress w-56" value="@Model.Review.RatingCounts["4star"]" max="@Model.Review.ReviewCount"></progress>
                    <span class="text-sm">@Model.Review.RatingCounts["4star"]</span>
                </div>
                <div class="flex items-center gap-3 mb-2">
                    <span class="w-16 text-sm">3 stars</span>
                    <progress class="progress w-56" value="@Model.Review.RatingCounts["3star"]" max="@Model.Review.ReviewCount"></progress>
                    <span class="text-sm">@Model.Review.RatingCounts["3star"]</span>
                </div>
                <div class="flex items-center gap-3 mb-2">
                    <span class="w-16 text-sm">2 stars</span>
                    <progress class="progress w-56" value="@Model.Review.RatingCounts["2star"]" max="@Model.Review.ReviewCount"></progress>
                    <span class="text-sm">@Model.Review.RatingCounts["2star"]</span>
                </div>
                <div class="flex items-center gap-3 mb-2">
                    <span class="w-16 text-sm">1 star</span>
                    <progress class="progress w-56" value="@Model.Review.RatingCounts["1star"]" max="@Model.Review.ReviewCount"></progress>
                    <span class="text-sm">@Model.Review.RatingCounts["1star"]</span>
                </div>
            </div>
        </div>
        <div class="divider divider-horizontal"></div>

        @* Overall Rating *@
        <div class="flex flex-col items-center">
            <h2 class="text-xl font-semibold">Overall Rating</h2>
            <div class="flex justify-center items-center mt-2">
                <span class="text-4xl font-bold">@Model.Review.AverageRating.ToString("0.0")</span>
                <div class="rating rating-md ml-2">
                    <input type="radio" name="rating-2" class="mask mask-star-2" checked="checked" disabled />
                </div>
            </div>
            <p class="text-sm mt-1">@Model.Review.ReviewCount Reviews</p>
        </div>
    </div>

    @* Write Review *@
    <div class="mt-10">
        @* Review Filter and Sorting *@
        <div class="flex justify-between items-center mb-5">
            <p class="text-sm">@Model.Review.ReviewCount Reviews</p>
            <select class="select select-bordered w-1/2 border-gray-300 rounded-lg">
                <option disabled selected>Sort by </option>
                <option>Highest to Lowest Rating</option>
                <option>Lowest to Highest Rating</option>
                <option>Newest to Oldest</option>
                <option>Oldest to Newest</option>
            </select>
        </div>

        @if (User.Identity.IsAuthenticated)
        {
            <div class="flex justify-start mb-10">
                <button onclick="window.my_modal_review.showModal()" class="btn px-10 bg-black text-white hover:bg-gray-700">
                    WRITE A REVIEW
                </button>
            </div>

            <!-- Review Modal -->
            <dialog id="my_modal_review" class="modal">
                <div class="modal-box w-25 bg-[#F2F2F2]">
                    <h3 class="font-bold text-lg mb-4">Write Your Review</h3>

                    <form asp-controller="Shop" asp-action="SubmitReview" method="post" class="space-y-4">
                        <input type="hidden" name="ProductId" value="@Model.Product.Id" />

                        <div>
                            <label class="block text-sm font-medium mb-2">Rating</label>
                            <div class="rating rating-lg">
                                @for (int i = 1; i <= 5; i++)
                                {
                                    <input type="radio" name="Rating" value="@i" class="mask mask-star-2 bg-[#1F2937]" @(i == 5 ? "checked" : "") />
                                }
                            </div>
                        </div>

                        <div>
                            <label for="ReviewText" class="block text-sm font-medium mb-2">Your Review</label>
                            <textarea id="ReviewText" name="ReviewText" class="textarea textarea-bordered w-full h-32" 
                          placeholder="Share your experience with this product..."></textarea>
                        </div>

                        <div class="modal-action">
                            <button type="button" class="btn bg-white" onclick="window.my_modal_review.close()">CANCEL</button>
                            <button type="submit" class="btn bg-black text-white hover:bg-gray-700">SUBMIT REVIEW</button>
                        </div>
                    </form>
                </div>
            </dialog>
        }
        else
        {
            <div class="flex justify-start mb-10">
                <a href="@Url.Action("Login", "Auth", new { returnUrl = Context.Request.Path })" class="btn px-10 bg-black text-white hover:bg-gray-700">
                    SIGN IN TO LEAVE A REVIEW
                </a>
            </div>
        }

        @* Reviews List *@
        <div class="space-y-8">
            @foreach (var review in Model.Review.Reviews)
            {
                <div class="flex flex-col gap-2">
                    <div class="rating rating-sm mb-2">
                        @for (int i = 1; i <= 5; i++)
                        {
                            <input type="radio" name="review-@review.Id" class="mask mask-star-2" checked="@(review.Rating == i)" disabled />
                        }
                    </div>
                    <p class="mt-2">@review.ReviewText</p>
                    <p class="text-sm text-gray-600">@review.UserName • @review.ReviewDate.ToString("d MMM yyyy")</p>
                    <div class="divider"></div>
                </div>
            }
        </div>
    </div>
</div>

<!-- Add JavaScript for star rating and variant selection -->
    <script>
        function updateStars(rating) {
            const starContainer = document.getElementById('starContainer');
            starContainer.innerHTML = '';
            rating = Math.min(Math.max(parseFloat(rating) || 0, 0), 5); // Clamp between 0 and 5

            for (let i = 1; i <= 5; i++) {
                const star = document.createElement('span');
                star.classList.add('relative', 'inline-block', 'w-4', 'h-4');

                if (rating >= i) {
                    // Full star
                    star.innerHTML = `
                        <svg class="w-4 h-4 text-[#1F2937]" fill="currentColor" viewBox="0 0 24 24">
                            <path d="M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z"/>
                        </svg>`;
                } else if (rating >= i - 1 && rating < i) {
                    // Partial star
                    const percentage = (rating - (i - 1)) * 100;
                    star.innerHTML = `
                        <svg class="w-4 h-4 text-gray-300" fill="currentColor" viewBox="0 0 24 24">
                            <path d="M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z"/>
                        </svg>
                        <svg class="w-4 h-4 text-[#1F2937] absolute top-0 left-0" fill="currentColor" viewBox="0 0 24 24" style="clip-path: inset(0 ${100 - percentage}% 0 0);">
                            <path d="M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z"/>
                        </svg>`;
                } else {
                    // Empty star
                    star.innerHTML = `
                        <svg class="w-4 h-4 text-gray-300" fill="currentColor" viewBox="0 0 24 24">
                            <path d="M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z"/>
                        </svg>`;
                }
                starContainer.appendChild(star);
            }
        }

        // Initialize stars with the average rating from the model
        updateStars(@Model.Review.AverageRating);

        // Existing variant selection logic
        document.getElementById('variant-select').addEventListener('change', function () {
            const selectedOption = this.options[this.selectedIndex];
            const price = selectedOption.getAttribute('data-price');
            const stock = selectedOption.getAttribute('data-stock');
            const attributes = JSON.parse(selectedOption.getAttribute('data-attributes') || '[]');

            document.getElementById('variant-price').textContent = price;

            const stockElement = document.getElementById('variant-stock');
            stockElement.textContent = stock;
            stockElement.className = 'underline' + (stock <= 5 ? ' text-red-500' : ' text-[#337A21]');

            const specsElement = document.getElementById('variant-specs');
            specsElement.innerHTML = '';
            if (attributes.length === 0) {
                const li = document.createElement('li');
                li.textContent = 'No specifications available';
                li.className = 'text-gray-500';
                specsElement.appendChild(li);
            } else {
                attributes.forEach(attr => {
                    const li = document.createElement('li');
                    li.className = 'flex items-center gap-2 text-gray-700';
                    li.innerHTML = `<span class="text-green-500">+</span> ${attr.Name} : ${attr.Value}`;
                    specsElement.appendChild(li);
                });
            }
        });
    </script>