@model SharedViewModels.Cart.CartDto
@{
}

<div class="px-56 w-full min-h-screen bg-[#F2F2F2]">
    <p class="text-center text-md font-bold py-4">
        Create Your Combo | 20% Off Two, 30% Off Three |
        <a href="#"><span class="underline font-medium">Exclusions apply</span></a>
    </p>

    <div class="flex gap-6">
        <!-- Cart Items Section -->
        <div class="flex-1">
            <h1 class="text-2xl font-bold mb-4">Cart</h1>

            @if (Model?.Items == null || !Model.Items.Any())
            {
                <div class="bg-white rounded-lg p-8 flex flex-col items-center justify-center">
                    <svg class="w-16 h-16 text-gray-400 mb-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 3h2l.4 2M7 13h10l4-8H5.4M7 13L5.4 5M7 13l-2.293 2.293c-.63.63-.184 1.707.707 1.707H17m0 0a2 2 0 100 4 2 2 0 000-4zm-8 2a2 2 0 11-4 0 2 2 0 014 0z"></path>
                    </svg>
                    <h2 class="text-xl font-semibold mb-2">Your cart is empty</h2>
                    <p class="text-gray-500 mb-6">Looks like you haven't added anything to your cart yet.</p>
                    <a href="/shop" class="bg-black text-white px-6 py-2 rounded-full mt-2">EXPLORE PRODUCTS</a>
                </div>
            }
            else
            {
                @foreach (var item in Model.Items)
                {
                    <div class="bg-white rounded-lg p-4 flex items-center mb-4">
                        <img src="@item.ImageUrl" alt="@item.ProductName" class="w-20 h-20 mr-4 object-cover">
                        <div class="flex-1">
                            <h2 class="text-lg font-semibold">@item.ProductName</h2>
                            <p class="text-sm text-gray-600">@item.VariantName</p>
                            <p class="text-sm text-green-600">In Stock</p>
                            <div class="flex items-center mt-2">
                                <button class="border px-2 py-1" onclick="updateQuantity('@item.Id', @(item.Quantity-1))">-</button>
                                <span class="border px-4 py-1">@item.Quantity</span>
                                <button class="border px-2 py-1" onclick="updateQuantity('@item.Id', @(item.Quantity+1))">+</button>
                            </div>
                        </div>
                        <div class="text-right">
                            <p class="text-lg font-semibold">$@item.Price.ToString("0.00")</p>
                            <div class="flex gap-2 mt-2">
                                <button class="text-sm text-gray-600 hover:underline" onclick="removeItem('@item.Id')">Remove</button>
                                <button class="text-sm text-gray-600 hover:underline">Move to Wishlist</button>
                            </div>
                        </div>
                    </div>
                }
            }
        </div>

        <!-- Summary Section -->
        <div class="w-1/3">
            <div class="bg-white rounded-lg p-6">
                <h2 class="text-lg font-bold mb-4">Summary</h2>

                <div class="flex justify-between mb-2">
                    <span>Subtotal (@Model?.TotalItems items)</span>
                    <span>$@(Model?.Items?.Sum(i => i.Price * i.Quantity).ToString("0.00") ?? "0.00")</span>
                </div>
                <div class="flex justify-between mb-2">
                    <span>Shipping</span>
                    <span>Free</span>
                </div>
                <div class="flex justify-between mb-2">
                    <span>Tax</span>
                    <span>Calculated at checkout</span>
                </div>

                <div class="border-t mt-4 pt-4">
                    <div class="flex justify-between font-bold">
                        <span>Total</span>
                        <span>$@(Model?.Items?.Sum(i => i.Price * i.Quantity).ToString("0.00") ?? "0.00")</span>
                    </div>
                </div>

                <p class="text-sm text-gray-600 mt-4">
                    Shipping options will be available during checkout.
                </p>

                @if (Model?.Items?.Any() == true)
                {
                    <button class="bg-[#00C4B4] text-white w-full py-3 rounded-full mt-4">CONTINUE TO CHECKOUT</button>
                }
                else
                {
                    <button disabled class="bg-gray-300 text-gray-500 w-full py-3 rounded-full mt-4 cursor-not-allowed">CONTINUE TO CHECKOUT</button>
                }
            </div>
        </div>
    </div>
</div>

<script>
    function updateQuantity(itemId, quantity) {
        if (quantity <= 0) {
            return;
        }
        fetch('/Cart/UpdateCartItem', {
            method: 'PUT',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({
                cartItemId: itemId,
                quantity: quantity
            })
        })
        .then(response => {
            if (response.ok) {
                window.location.reload();
            }
        })
        .catch(error => console.error('Error updating cart item:', error));
    }
    
    function removeItem(itemId) {
        console.info('Removing item with ID:', itemId);
        fetch('/Cart/RemoveCartItem?itemId=' + itemId, {
            method: 'DELETE',
            headers: {
                'Content-Type': 'application/json'
            }
        })
        .then(response => {
            if (response.ok) {
                window.location.reload();
            }
        })
        .catch(error => console.error('Error removing cart item:', error));
    }
</script>